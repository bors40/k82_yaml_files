##########################
# UPDATE KERNEL VERSION ##
##########################

# NOTE: Check if your VM running kernel version lower then 4.1.  Then execute below mentioned commands. else skip this  to inital setup.

uname -r

sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
sudo rpm -Uvh https://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm
sudo yum --enablerepo=elrepo-kernel install kernel-ml -y

# @@@@@@@@@@@@@@@@@@@@@@@@@@@

#PRE-REQUITES
#####################

setenforce 0

sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux

systemctl disable  firewalld
systemctl stop  firewalld


####################
## INITIAL SETUP  ##
####################

# ON MASTER AND ALL WORKER NODES

## SET HOSTNAMES

##############
# ON MASTER ##
##############

vi /etc/hostname

devx-k8s-master.ziyotek.local

##############
# ON Worker1 #
##############
vi /etc/hostname
devx-worker-node1.ziyotek.local

##############
# ON Worker2 #
##############
devx-worker-node2.ziyotek.local

# SET HOSTS FILE # change IP

vi /etc/hosts
192.168.2.35 devx-k8s-master.ziyotek.local     devx-k8s-master
192.168.2.36 devx-worker-node1.ziyotek.local    devx-worker-node1
192.168.2.37 devx-worker-node2.ziyotek.local    devx-worker-node2

############
# POWEROFF #
############

reboot
NOTE: Select updated kernel version while booting.

# SEND OUTPUT

cat /etc/resolv.conf
echo "nameserver 8.8.8.8" > /etc/resolv.conf
iptables -F

########################
# INSTALLING PACKAGES ##
########################

yum install -y epel-release vim wget yum-utils device-mapper-persistent-data lvm2

yum remove mariadb* -y

swapoff -a
vim /etc/fstab
#.. comment out below line.
#/dev/mapper/centos-swap swap swap defaults 0 0

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

yum  update -y

wget https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-19.03.12-3.el7.x86_64.rpm  -P /tmp
wget https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm -P /tmp
wget https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-cli-19.03.12-3.el7.x86_64.rpm  -P /tmp

yum install -y /tmp/docker-ce-cli-19.03.12-3.el7.x86_64.rpm /tmp/containerd.io-1.2.6-3.3.el7.x86_64.rpm /tmp/docker-ce-19.03.12-3.el7.x86_64.rpm

yum install -y kubeadm kubelet kubectl  # 1.22.2

cat <<EOF > /etc/environment
LC_CTYPE=en_US.UTF-8
LC_ALL=en_US.UTF-8
EOF

systemctl restart docker
systemctl  enable  docker
systemctl  status  docker

###
cat <<EOF > /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"]
}
EOF
###

systemctl daemon-reload
systemctl restart docker


echo 1 > /proc/sys/net/bridge/bridge-nf-call-iptables

cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

sysctl --system


systemctl  enable  kubelet



####################
# ON MASTER ONLY  ##
####################

kubeadm init --apiserver-advertise-address=0.0.0.0 --pod-network-cidr=10.244.0.0/16

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml


kubectl get all -n kube-system

# NOTE: Wait for your services to up and running state.


###################
# ON WORKER NODE ##
###################
NOTE: EXECUTE THE JOIN COMMAND WHICH  YOU GOT FROM MASTER AFTER KUBEADM INIT.
#kubeadm join 

